@{
    ViewBag.Title = "2.1 Ethnography";
}

<div class="jumbotron">
    <h2>2.1 - Ethnography</h2>
    <p>Shadow perspective users (ethnography study) for two hours and record your observations. 
       Review your observations and identify an application that enables the user to do something
       much easier/faster/better...
    </p>
</div>

<h4>Southeast Portland Tool Library (SEPTL)</h4>
<p>
    The tool library is a resource for residents of SE Portland to check out tools for free for home projects, etc. Tools are due after
    1 week, after which a $1 late fee is charged for non-electric tools and a $2 late fee is charged for electric tools. The fees accumulate
    per week (example: an electric drill that is 3 weeks late would have a $6 late fee). Membership is free with a suggested donation of any
    amount. Most people donate $20. Membership is for a person's entire lifetime. Users (members) were observed entering the tool library,
    checking tools out, returning tools, paying late fees, and perusing the tool shelves. Volunteers were also observed helping users with
    tools, processing late fees, processing new members, and checking tools in and out. Lead volunteer mentioned that they would love for us
    to design and implement a new volunteer scheduling application for them.
</p>

<br />

<h4>Volunteer Scheduling</h4>
<p>
    Currently the Tool Shed uses a scheduling system that needs to be improved. Both the manager and a handful of employees
    expressed concerns that this area could be improved. The current system is not an appropriate scheduling application with
    users reporting that it is not intuitive. Our application would be a simple calendar representation of the Tool Shed's
    available hours along with a 'first come first serve' type of reservations not dissimilar from how the PSU Library schedules
    study rooms.
</p>

<br />

<h4>Tool Location Services</h4>
<p>
    The Tool Shed currently does not have a map displaying where each tool should be located. During the ethnography study, we
    noticed many times that users did not know where to place the item being returned. Furthermore, customers laboriously searched
    the shed for a specific tool. Another option, apart from the scheduling application, would be to create an interactive map
    of the Tool Shed with search functionality. The UI would include a dynamic map and a single input field. Users would input
    the tool id and the map would respond to display its primary location. This would alleviate the amount of wasted time required 
    by volunteers and customers.
</p>

<br />

<h4>Raw Data</h4>
<button id="notesButton" type="button" class="btn btn-default" aria-label="..." onclick="openNotes()">Activity Log</button>
<button id="floorPlanButton" type="button" class="btn btn-default" aria-label="..." onclick="openFloorPlan()">Floor Plan</button>

@(Html.Kendo().Window()        
        .Title("Activity Log")
        .Name("notesWindow")
        .Content(
            @<text>
                <iframe src="https://drive.google.com/file/d/0BwLS0q_z3G1SdDNMVEpQUl93ME0/preview" style="position:center;width:99%;height:99%"></iframe>
            </text>)
         .Iframe(true)
         .Resizable()
         .Draggable()
         .Visible(false)
         .Animation(animation => {
             animation.Open(open => {
                 open.Zoom(ZoomDirection.In);
                 open.Fade(FadeDirection.In);
             });
             animation.Close(close => {
                 close.Zoom(ZoomDirection.Out);
                 close.Fade(FadeDirection.Out);
             });
         })
         .Events(events => events.Close("closeNotes"))
)

@(Html.Kendo().Window()
        .Title("Floor Plan")
        .Name("floorPlanWindow")
        .Content(
    @<text>        
        <img id="floorPlanImg" src="~/Content/Recourse Documents/ToolShed Layout.jpg" style="height:100%;width:100%;max-width:700px" />
    </text>)
         .Iframe(false)
         .Resizable()
         .Draggable()
         .Visible(false)
         .Animation(animation => {
             animation.Open(open => {
                 open.Zoom(ZoomDirection.In);
                 open.Fade(FadeDirection.In);
             });
             animation.Close(close => {
                 close.Zoom(ZoomDirection.Out);
                 close.Fade(FadeDirection.Out);
             });
         })
         .Events(events => events.Close("closeFloorPlan"))
)

@section Scripts{
    <script type="text/javascript">
        function closeNotes() {
            $("#notesButton").show();
        }

        function openNotes() {
            $("#notesButton").hide();

            var window = $("#notesWindow").data("kendoWindow");
            var height = screen.height / 2;
            window.wrapper.css({
                width: "85%",
                maxWidth: "900px",
                height: height,
            });

            window.open();
            window.center();
        }

        function closeFloorPlan() {
            $("#floorPlanButton").show();
        }

        function openFloorPlan() {
            $("#floorPlanButton").hide();

            var window = $("#floorPlanWindow").data("kendoWindow");
            var height = screen.height / 2;
            window.wrapper.css({
                width: "85%",
                maxWidth: "700px",
                height: height,
            })
            window.open();
            window.center();
        }
    </script>    
}